{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/me/me.component.html","webpack:///./src/app/components/me/me.component.ts","webpack:///./src/app/components/tap/tap.component.html","webpack:///./src/app/components/tap/tap.component.ts","webpack:///./src/app/partials/footer/footer.component.html","webpack:///./src/app/partials/footer/footer.component.ts","webpack:///./src/app/partials/header/header.component.html","webpack:///./src/app/partials/header/header.component.ts","webpack:///./src/app/services/mongodb.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n\\n<main>\\n  <router-outlet></router-outlet>\\n</main>\\n\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n// Importer le module\nimport { Routing } from './app.routing';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HeaderComponent } from './partials/header/header.component';\nimport { FooterComponent } from './partials/footer/footer.component';\nimport { MeComponent } from './components/me/me.component';\nimport { TapComponent } from './components/tap/tap.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    MeComponent,\n    TapComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    Routing\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// Importer les modules\r\nimport { ModuleWithProviders }  from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Importer le composant à utiliser dans le route\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MeComponent } from './components/me/me.component';\r\nimport { TapComponent } from './components/tap/tap.component';\r\n\r\n// Création du tableau de routes\r\nconst appRoutes: Routes = [\r\n\r\n  // Définition de la route principale\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'me',\r\n    component: MeComponent\r\n  },\r\n  {\r\n    path: 'tap',\r\n    component: TapComponent\r\n  }\r\n];\r\n\r\n// Exporter le Routing\r\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);","module.exports = \"<div id=\\\"login\\\" Class=\\\"container\\\">\\n  <div class=\\\"title_form\\\" (click)=\\\"show_form = 'login'\\\">Login</div>\\n  <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitLogin()\\\" *ngIf=\\\"show_form === 'login'\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email_login\\\">Email</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userLogin.email\\\" name=\\\"email_login\\\" id=\\\"email_login\\\" required>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password_login\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userLogin.password\\\" name=\\\"password_login\\\" id=\\\"password_login\\\" required>\\n    </div>\\n\\n    <div class=\\\"submit\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\">Connexion</button>\\n    </div>\\n  </form>\\n</div>\\n\\n<div id=\\\"register\\\" Class=\\\"container\\\">\\n  <div class=\\\"title_form\\\" (click)=\\\"show_form = 'register'\\\">Register</div>\\n  <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitRegister()\\\" *ngIf=\\\"show_form === 'register'\\\">\\n    <div class=\\\"subtitle_form\\\">About you</div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"first_name\\\">First name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userRegister.firstName\\\" name=\\\"first_name\\\" id=\\\"first_name\\\" required>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"last_name\\\">Last name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userRegister.lastName\\\" name=\\\"last_name\\\" id=\\\"last_name\\\" required>\\n    </div>\\n\\n    <div class=\\\"subtitle_form\\\">Login informations</div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email_register\\\">Email</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userRegister.email\\\" name=\\\"email_register\\\" id=\\\"email_register\\\" required>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userRegister.password\\\" name=\\\"password\\\" id=\\\"password\\\" required>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"cgv\\\" name=\\\"cgv\\\" id=\\\"cgv\\\" required>\\n        <label for=\\\"cgv\\\">I accept the terms and conditions</label>\\n    </div>\\n\\n    <div class=\\\"submit\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"!registerForm.form.valid\\\">Connexion</button>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MongodbService } from '../../services/mongodb.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private mongodbService: MongodbService,\n    private router: Router\n  ) { }\n\n  userRegister = {\n    firstName: 'Nicolas',\n    lastName: 'Heine',\n    email: 'nicolas.heine11@gmail.com',\n    password: 'password'\n  };\n\n  cgv = false;\n\n  userLogin = {\n    email: '',\n    password: ''\n  };\n\n  show_form = 'login';\n\n  ngOnInit(){\n    if(localStorage.getItem('token')){\n      this.router.navigate(['/me']);\n    }\n    /*this.mongodbService.saveTap(sessionStorage.getItem('token'), {id_user: 'get from token', score: 50}).then(data => {\n      console.log(data);\n    });*/\n  }\n\n  onSubmitLogin(){\n    this.mongodbService.loginUser(this.userLogin).then(user => {\n      if(!user['error']){\n        localStorage.setItem('token', user['token']);\n        this.router.navigate(['/me'])\n      }else{\n        // error\n      }\n    });\n  }\n\n  onSubmitRegister(){\n    this.mongodbService.registerUser(this.userRegister).then(user => {\n      if(!user['error']){\n        this.show_form = 'login';\n      }else{\n        console.log('error');\n      }\n    });\n  }\n\n}\n","module.exports = \"<p>\\n  me works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-me',\n  templateUrl: './me.component.html',\n  styles: []\n})\nexport class MeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  tap works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tap',\n  templateUrl: './tap.component.html',\n  styles: []\n})\nexport class TapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<footer>\\n  Under MIT Licence @2018 <a href=\\\"http://www.nicolasheine.fr\\\">Nicolas Heine</a>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: []\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  header works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styles: []\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MongodbService {\n\n  constructor() { }\n\n  private registerUserUrl = 'http://localhost:8080/api/register';\n  private loginUserUrl = 'http://localhost:8080/api/login';\n  private saveTapUrl = 'http://localhost:8080/api/save';\n\n  public registerUser (user: {firstName: string, lastName: string, email: string, password: string}): Promise<any[]> {\n    return fetch(this.registerUserUrl,\n      {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      })\n      .then(data => {\n        return Promise.resolve(data);\n      })\n      // Traiter le réponse\n      .then( data => data.json() )\n      // Capter l'erreur\n      .catch((err) => console.log(err) );\n  }\n\n  public loginUser (user: {email: string, password: string}): Promise<any[]> {\n    return fetch(this.loginUserUrl,\n      {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      })\n      .then(data => {\n        return Promise.resolve(data);\n      })\n      // Traiter le réponse\n      .then( data => data.json() )\n      // Capter l'erreur\n      .catch((err) => console.log(err) );\n  }\n\n  public saveTap(token: string, content: {id_user: string, score: number}): Promise<any[]> {\n    return fetch(this.saveTapUrl,\n      {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json',\n          'x-access-token': token\n        },\n        body: JSON.stringify(content)\n      })\n      .then(data => {\n        return Promise.resolve(data);\n      })\n      // Traiter le réponse\n      .then( data => data.json() )\n      // Capter l'erreur\n      .catch((err) => console.log(err) );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}